---
title: "Readme"
format: markdown_github
editor: visual
---

### Date (last run of the script)

```{r}
format(Sys.time(), "%a %b %d %X %Y")
```

Note that the coefficients have been \[0.5, 0.5\]

Codebase: \[https://github.com/tensorchiefs/carefl/commit/\]

Command:

```         
NOT AVAILIBE. CODE HAS BEEN RUN PROBABLY AROUND AUGUST 9 with
main.py -c -n 2500
```

The directory contains several CSV - files:

```{R}
#List the files in the current getSrcDirectory
list.files()
```

-   X_org.csv training data before scaling
-   X scaled data used for training
-   xObs.csv Counterfactual values

```{r, echo=FALSE}
library(stats)    # for shapiro.test

summary_stats <- function(df) {
  # Initialize an empty data frame to store results
  result <- data.frame(Column = character(),
                       Mean = numeric(),
                       Std_Dev = numeric(),
                       Kurtosis = numeric(),
                       Shapiro_W = numeric(),
                       Shapiro_p = numeric(),
                       Min = numeric(),
                       Max = numeric(),
                       stringsAsFactors = FALSE)

  # Loop through each column and calculate summary statistics
  for(col_name in names(df)) {
    if(is.numeric(df[[col_name]])) {
      vec <- df[[col_name]]
      n <- length(vec)
      
      # Mean and standard deviation
      mean_val <- mean(vec, na.rm = TRUE)
      std_dev <- sd(vec, na.rm = TRUE)
      
      # Kurtosis
      kurt <- sum((vec - mean_val)^4, na.rm = TRUE) / (n * std_dev^4)
      kurt <- ((n*(n+1))/((n-1)*(n-2)*(n-3))) * kurt - 3*(n-1)/((n-2)*(n-3))
      
      # Minimum and maximum
      min_val <- min(vec, na.rm = TRUE)
      max_val <- max(vec, na.rm = TRUE)
      
      # Shapiro-Wilk test
      if (length(vec) > 5000 || length(vec) < 3){
        result <- rbind(result, c(col_name, mean_val, std_dev, kurt,
                                NA, NA,
                                min_val, max_val)) 
      } else{
        shapiro_test <- shapiro.test(vec)
         # Append the results to the summary table
        result <- rbind(result, c(col_name, mean_val, std_dev, kurt,
                                shapiro_test$statistic, shapiro_test$p.value,
                                min_val, max_val))  
      }
    }
  }

  # Assign column names
  colnames(result) <- c("Column", "Mean", "Std_Dev", "Kurtosis", "Shapiro_W", "Shapiro_p", "Min", "Max")
  
  return(result)
}
```

## The Training Data

```{R}
X = read.csv("X.csv", header = FALSE)
summary_stats(as.data.frame(X))
dim(X)
```

## Strength of the interventions

```         
xvals = np.arange(-3, 3, .1) #See counterfactuals()
```

This is equivalent to

```{r}
seq(-3,2.9,0.1)
```
